name: Finni Health CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test-client:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './client/package-lock.json'
    
    - name: Install dependencies
      run: npm install
    
    - name: Build
      run: npm run build --if-present
    
    - name: Check if test script exists
      id: check-test
      run: |
        if grep -q '"test"' package.json; then
          echo "Test script found in package.json"
          echo "has_test=true" >> $GITHUB_OUTPUT
        else
          echo "No test script found in package.json"
          echo "has_test=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Test
      if: steps.check-test.outputs.has_test == 'true'
      run: npm test -- --passWithNoTests
      
  build-and-test-server:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        mongodb-version: ['5.0', '6.0']

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './server/package-lock.json'
    
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
        mongodb-port: 27017
    
    - name: Install dependencies
      run: npm install
    
    - name: Create .env file
      run: |
        echo "PORT=5000" > .env
        echo "MONGODB_URI=mongodb://localhost:27017/finni-health-test" >> .env
        echo "NODE_ENV=test" >> .env
    
    - name: Check if lint script exists
      id: check-lint
      run: |
        if grep -q '"lint"' package.json; then
          echo "Lint script found in package.json"
          echo "has_lint=true" >> $GITHUB_OUTPUT
        else
          echo "No lint script found in package.json"
          echo "has_lint=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Lint
      if: steps.check-lint.outputs.has_lint == 'true'
      run: npm run lint
      
    - name: Run Tests
      run: npm test
      continue-on-error: true

  deploy:
    needs: [build-and-test-client, build-and-test-server]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: './client/package-lock.json'
    
    - name: Install client dependencies
      run: cd client && npm install
    
    - name: Build client
      run: cd client && npm run build
    
    # This is a placeholder for deployment steps
    # In a real-world scenario, you would add steps to deploy to your hosting provider
    - name: Deploy
      run: |
        echo "Deployment would happen here"
        echo "For example, deploying to Heroku, AWS, or other cloud providers"
        # Example deployment commands would go here
